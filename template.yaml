AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  BCS: Butter Chicken Supper

Globals:
  Function:
    Tracing: Active
  Api:
    TracingEnabled: True

Resources:
  ChickenApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
  StockCheckerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/stock-checker/
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Gets the menu from the dynamodb table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref SampleTable
          IS_OFFLINE: ""
      Events:
        Api:
          Type: Api
          Properties:
            Path: /a/
            Method: GET
            RestApiId: !Ref ChickenApi

  GetMenuFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-menu/
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Returns the menu for BCS.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
          IS_OFFLINE: ""
      Events:
        Api:
          Type: Api
          Properties:
            Path: /b/
            Method: GET
            RestApiId: !Ref ChickenApi

  StockBuyerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/stock-buyer/
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref SampleTable
          IS_OFFLINE: ""
      Events:
        Api:
          Type: Api
          Properties:
            Path: /c/
            Method: GET
            RestApiId: !Ref ChickenApi

  SampleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SampleTable
      AttributeDefinitions:
          # Index attributes
          - AttributeName: partitionKey
            AttributeType: S
          - AttributeName: sortKey
            AttributeType: S
      KeySchema:
          - AttributeName: partitionKey
            KeyType: HASH
          - AttributeName: sortKey
            KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  # StockTradingStateMachineHourlyTradingSchedule is an implicit Schedule event rule created out of Events key under Serverless::StateMachine
  # Find out more about other implicit resources you can reference within SAM
  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources.html
  StockTradingStateMachineArn:
    Description: "Stock Trading state machine ARN"
    Value: !Ref StockBuyerFunction
  StockTradingStateMachineRole:
    Description: "IAM Role created for Stock Trading state machine based on the specified SAM Policy Templates"
    Value: !GetAtt StockBuyerFunction.Arn
